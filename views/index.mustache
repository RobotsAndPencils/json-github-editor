<html>
    <head>
        <meta charset="utf-8">
        <title>{{ title }}</title>
        <link rel="stylesheet" href="css/jsondiffpatch-html.css" crossorigin="anonymous">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    </head>
    <body>
        <div class="container">
            <div id="spinner_container" style="background-color: rgba(0, 0, 0, 0.3); width:100%; height:100%; position:fixed; top:0px; left:0px; z-index:1000;"></div>
            <div class="jumbotron text-center">
                <h1>{{ title }}</h1>
                <button type="button" class="btn btn-primary" id="authenticate">Authenticate with GitHub</button>
            </div>

            <div id="editor_holder"></div>

            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Confirm Changes</h4>
                        </div>
                        <div class="modal-body">
                            <div id="visual-diff"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="commit">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="js/jsoneditor.js"></script>
        <script src="js/jsondiffpatch-full.js"></script>
        <script src="js/jsondiffpatch-formatters.js"></script>
        <script src="js/spin.min.js"></script>
        <script src="https://unpkg.com/github-api/dist/GitHub.bundle.min.js"></script>
        <script   src="https://code.jquery.com/jquery-3.2.1.min.js"   integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="   crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
        <script>
            async function main() {
                const authButton = document.getElementById("authenticate");
                const spinner = new Spinner();
                const spinnerContainer = document.getElementById("spinner_container");
                spinnerContainer.hidden = true;

                const urlParams = new URLSearchParams(window.location.search);
                const githubTemporaryCode = urlParams.get('code');
                const githubState = urlParams.get('state');

                if (githubTemporaryCode == null) {
                    // The user doesn't have a code from GitHub

                    authButton.addEventListener("click", function() {
                        window.location.href = '/login';
                    }, false);

                    return;
                }

                // The user has a code from GitHub
                urlParams.delete('code');
                urlParams.delete('state');
                window.history.replaceState({}, '', `${location.pathname}?${urlParams}`);
                authButton.disabled = true;

                const {token, owner, repo, branch, jsonFile, schemaFile} = await fetch(`authenticate/${githubTemporaryCode}?state=${githubState}`).then(response => response.json()).catch(function(error) {
                    spinner.stop();
                    spinnerContainer.hidden = true;
                    authButton.disabled = false;
                    console.log(error);
                });

                spinner.spin(spinnerContainer);
                spinnerContainer.hidden = false;

                const gh = new GitHub({ token: token });
                const ghRepo = gh.getRepo(owner, repo);

                const [{data: json}, {data: schema}] = await Promise.all([
                    ghRepo.getContents(branch, jsonFile, true),
                    ghRepo.getContents(branch, schemaFile, true)
                ]).catch(function(error) {
                    spinner.stop();
                    spinnerContainer.hidden = true;
                    authButton.disabled = false;
                    console.log(error);
                });

                spinner.stop()
                spinnerContainer.hidden = true;

                schema.properties.projects.confirmDelete = function() { return window.confirm("Are you sure?") }

                const editor = new JSONEditor(document.getElementById('editor_holder'),{
                    schema: schema,
                    startval: json,
                    disable_edit_json: true,
                    theme: "bootstrap3"
                });

                const editorHolder = document.getElementById('editor_holder');
                const saveButton = document.createElement("button");
                saveButton.className = "btn btn-primary";
                saveButton.id = "save";
                saveButton.appendChild(document.createTextNode("Save"));
                editorHolder.parentNode.insertBefore(saveButton, editorHolder.nextSibling);
                document.getElementById('save').addEventListener('click',function() {
                    var delta = jsondiffpatch.diff(json, editor.getValue());

                    if (delta === undefined) {
                        alert('No changes made.');
                        return;
                    }

                    document.getElementById('visual-diff').innerHTML = jsondiffpatch.formatters.html.format(delta);

                    $('#myModal').modal()
                });

                document.getElementById("commit").addEventListener("click", function() {
                    spinner.spin(spinnerContainer);
                    spinnerContainer.hidden = false;
                    repo.writeFile(branch, jsonFile, JSON.stringify(editor.getValue(), null, 4), "Update build config", { encode: true }).then(function() {
                        spinner.stop();
                        spinnerContainer.hidden = true;
                    });
                }, false);
            }

            main();
        </script>
    </body>
</html>
